{"version":3,"sources":["../src/index.js"],"names":["setIfMissing","patches","Tabs","React","createRef","activeTab","firstFieldInput","current","focus","console","debug","tabName","props","type","fields","filter","f","fieldset","hidden","arr","result","forEach","a","push","Array","isArray","concat","flattenFields","path","childPath","PathUtils","startsWith","trimLeft","length","find","findIndex","name","getTabFields","markers","reduce","fm","getFieldMarkers","fieldName","marker","state","field","onBlur","onFocus","fieldPatchEvent","onChange","readOnly","e","prefixAll","prepend","_type","setState","activeTabPanel","input","level","focusPath","value","otherProps","tabFields","getActiveTabFields","contentStyle","styles","content_document","options","layout","content_object","fieldSets","fieldsets","single","sort","b","sortOrder","tabs","tab_headers","map","fs","getTabMarkers","validation","errors","warnings","hasErrors","hasWarnings","hasIcon","title","iconStyles","icon","icon__error","icon__warning","tab","tab__active","onTabClicked","tab_inner","i","fieldLevel","fieldRef","fieldMarkers","fieldPath","fieldType","fieldReadOnly","fieldValue","undefined","fieldWrapperProps","key","className","defaultStyles","root","field_wrapper","fieldProps","ref","onFieldFocusHandler","patchEvent","onFieldChangeHandler","onFieldBlurHandler","expectedType","actualType","isCompatible","jsonType","setInput","Component","PropTypes","shape","array","isRequired","number","string","func"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,Y,GAAiBC,oB,CAAjBD,Y;;IAEFE,I;;;;;;;;;;;;;;;;mFAgBcC,kBAAMC,SAAN,E;;kFACDD,kBAAMC,SAAN,E;;4DAET;AACNC,MAAAA,SAAS,EAAE;AADL,K;;4DAIA,YAAM;AACZ,UAAI,MAAKC,eAAL,CAAqBC,OAAzB,EAAkC;AAChC,cAAKD,eAAL,CAAqBC,OAArB,CAA6BC,KAA7B;AACD,OAFD,MAEO,CACN;;AAEDC,MAAAA,OAAO,CAACC,KAAR;AACD,K;;mEAEc,UAACC,OAAD,EAAa;AAC1B,aAAO,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAuBC,MAAvB,CACL,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,QAAF,IAAcN,OAAd,IAAyBK,CAAC,CAACH,IAAF,CAAOK,MAAP,KAAkB,IAAlD;AAAA,OADK,CAAP;AAGD,K;;oEAEe,UAACC,GAAD,EAAS;AACvB,UAAIC,MAAM,GAAG,EAAb;AACAD,MAAAA,GAAG,CAACE,OAAJ,CAAY,UAACC,CAAD,EAAO;AACjBF,QAAAA,MAAM,CAACG,IAAP,CAAYD,CAAZ;;AACA,YAAIA,CAAC,CAACT,IAAF,IAAUW,KAAK,CAACC,OAAN,CAAcH,CAAC,CAACT,IAAF,CAAOC,MAArB,CAAd,EAA4C;AAC1CM,UAAAA,MAAM,GAAGA,MAAM,CAACM,MAAP,CAAc,MAAKC,aAAL,CAAmBL,CAAC,CAACT,IAAF,CAAOC,MAA1B,CAAd,CAAT;AACD;AACF,OALD;AAMA,aAAOM,MAAP;AACD,K;;oEAEe,UAACQ,IAAD,EAAOC,SAAP,EAAqB;AACnC,aAAOC,SAAS,CAACC,UAAV,CAAqBH,IAArB,EAA2BC,SAA3B,IACHC,SAAS,CAACE,QAAV,CAAmBJ,IAAnB,EAAyBC,SAAzB,CADG,GAEH,EAFJ;AAGD,K;;kEAEa,UAACD,IAAD,EAAU;AACtB,UAAIA,IAAI,IAAIA,IAAI,CAACK,MAAL,GAAc,CAA1B,EAA6B;AAC3B,YAAIjB,CAAC,GAAG,MAAKJ,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAuBoB,IAAvB,CAA4B,UAAClB,CAAD,EAAO;AACzC,iBAAOY,IAAI,CAACO,SAAL,CAAenB,CAAC,CAACoB,IAAjB,IAAyB,CAAC,CAAjC;AACD,SAFO,CAAR;;AAIA,eAAOpB,CAAC,CAACC,QAAT;AACD;AACF,K;;oEAEe,UAACN,OAAD,EAAa;AAC3B,UAAIG,MAAM,GAAG,MAAKa,aAAL,CAAmB,MAAKU,YAAL,CAAkB1B,OAAlB,CAAnB,CAAb;;AACA,UAAI2B,OAAO,GAAGxB,MAAM,CAACyB,MAAP,CAAc,UAACnB,MAAD,EAASJ,CAAT,EAAe;AACzC,YAAIwB,EAAE,GAAG,MAAKC,eAAL,CAAqBzB,CAAC,CAACoB,IAAvB,CAAT;;AACA,YAAII,EAAE,IAAIA,EAAE,CAACP,MAAH,GAAY,CAAtB,EAAyB;AACvBb,UAAAA,MAAM,GAAGA,MAAM,CAACM,MAAP,CAAcc,EAAd,CAAT;AACD;;AAED,eAAOpB,MAAP;AACD,OAPa,EAOX,EAPW,CAAd;AASA,aAAOkB,OAAP;AACD,K;;sEAEiB,UAACI,SAAD,EAAe;AAC/B,aAAO,MAAK9B,KAAL,CAAW0B,OAAX,CAAmBvB,MAAnB,CAA0B,UAAC4B,MAAD;AAAA,eAC/Bb,SAAS,CAACC,UAAV,CAAqB,CAACW,SAAD,CAArB,EAAkCC,MAAM,CAACf,IAAzC,CAD+B;AAAA,OAA1B,CAAP;AAGD,K;;yEAEoB,YAAM;AACzB,UAAI,MAAKgB,KAAL,CAAWvC,SAAX,KAAyB,EAA7B,EAAiC;AAC/B,eAAO,MAAKgC,YAAL,CAAkB,MAAKO,KAAL,CAAWvC,SAA7B,CAAP;AACD;;AAED,aAAO,IAAP;AACD,K;;yEAEoB,UAACwC,KAAD,EAAW;AAAA,wBACL,MAAKjC,KADA;AAAA,UACtBkC,MADsB,eACtBA,MADsB;AAAA,UACdjC,IADc,eACdA,IADc;AAG9BJ,MAAAA,OAAO,CAACC,KAAR,yBAAsCmC,KAAtC;;AAEA,UAAIC,MAAJ,EAAY;AACVA,QAAAA,MAAM;AACP;AACF,K;;0EAEqB,UAACD,KAAD,EAAQjB,IAAR,EAAiB;AAAA,yBACX,MAAKhB,KADM;AAAA,UAC7BmC,OAD6B,gBAC7BA,OAD6B;AAAA,UACpBlC,IADoB,gBACpBA,IADoB;AAGrCJ,MAAAA,OAAO,CAACC,KAAR,yBAAsCmC,KAAtC,EAA6CjB,IAA7C;;AAEA,UAAImB,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACnB,IAAD,CAAP;AACD;AACF,K;;2EAEsB,UAACiB,KAAD,EAAQG,eAAR,EAA4B;AAAA,yBACtB,MAAKpC,KADiB;AAAA,UACzCqC,QADyC,gBACzCA,QADyC;AAAA,UAC/BpC,IAD+B,gBAC/BA,IAD+B;;AAGjD,UAAI,CAACgC,KAAK,CAAChC,IAAN,CAAWqC,QAAhB,EAA0B;AACxB,YAAIC,CAAC,GAAGH,eAAe,CACpBI,SADK,CACKP,KAAK,CAACT,IADX,EAELiB,OAFK,CAEGrD,YAAY,CAAC;AAAEsD,UAAAA,KAAK,EAAEzC,IAAI,CAACuB;AAAd,SAAD,CAFf,CAAR;AAIA3B,QAAAA,OAAO,CAACC,KAAR,yBAAsCmC,KAAtC,EAA6CM,CAA7C;;AAEA,YAAIF,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACE,CAAD,CAAR;AACD;AACF;AACF,K;;2EAEsB,UAACN,KAAD,EAAQG,eAAR,EAA4B;AAAA,yBACtB,MAAKpC,KADiB;AAAA,UACzCqC,QADyC,gBACzCA,QADyC;AAAA,UAC/BpC,IAD+B,gBAC/BA,IAD+B;AAElD,K;;mEAEc,UAACI,QAAD,EAAc;AAC3B,YAAKsC,QAAL,CAAc;AACZlD,QAAAA,SAAS,EAAEY,QAAQ,CAACmB;AADR,OAAd;;AAGA,YAAKoB,cAAL,CAAoBjD,OAApB,CAA4BC,KAA5B;AACD,K;;+DAEU,UAACiD,KAAD,EAAW;AACpB,YAAKnD,eAAL,GAAuBmD,KAAvB;AACD,K;;6DAUQ,YAAM;AACbhD,MAAAA,OAAO,CAACC,KAAR,kBAA+B,MAAKE,KAApC;;AADa,yBAUT,MAAKA,KAVI;AAAA,UAIX8C,KAJW,gBAIXA,KAJW;AAAA,UAKXR,QALW,gBAKXA,QALW;AAAA,UAMXS,SANW,gBAMXA,SANW;AAAA,UAOXC,KAPW,gBAOXA,KAPW;AAAA,UAQX/C,IARW,gBAQXA,IARW;AAAA,UASRgD,UATQ;;AAWb,UAAMC,SAAS,GAAG,MAAKC,kBAAL,EAAlB;;AAEA,UAAIC,YAAY,GAAGC,iBAAOC,gBAA1B;;AAEA,UAAIrD,IAAI,CAACsD,OAAL,CAAaC,MAAb,KAAwB,QAA5B,EAAsC;AACpCJ,QAAAA,YAAY,GAAGC,iBAAOI,cAAtB;AACD;;AAED,UAAIC,SAAS,GAAG,EAAhB;;AACA,UACEzD,IAAI,CAAC0D,SAAL,IACA1D,IAAI,CAAC0D,SAAL,CAAetC,MAAf,GAAwB,CADxB,IAEApB,IAAI,CAAC0D,SAAL,CAAe,CAAf,EAAkBC,MAAlB,KAA6B,IAH/B,EAIE;AACAF,QAAAA,SAAS,GAAGzD,IAAI,CAAC0D,SAAL,CAAeE,IAAf,CAAoB,UAACnD,CAAD,EAAIoD,CAAJ,EAAU;AACxC,cAAIpD,CAAC,CAAC6C,OAAF,IAAaO,CAAC,CAACP,OAAnB,EAA4B;AAC1B,mBAAO7C,CAAC,CAAC6C,OAAF,CAAUQ,SAAV,GAAsBD,CAAC,CAACP,OAAF,CAAUQ,SAAvC;AACD;;AAED,iBAAO,CAAP;AACD,SANW,CAAZ;AAOD;;AAED,0BACE;AAAK,QAAA,SAAS,EAAEV,iBAAOW;AAAvB,SACGN,SAAS,CAACrC,MAAV,GAAmB,CAAnB,iBACC;AAAK,QAAA,SAAS,EAAEgC,iBAAOY;AAAvB,SACGP,SAAS,CAACQ,GAAV,CAAc,UAACC,EAAD,EAAQ;AACrB,YAAIzC,OAAO,GAAG,MAAK0C,aAAL,CAAmBD,EAAE,CAAC3C,IAAtB,CAAd;;AACA,YAAI6C,UAAU,GAAG3C,OAAO,CAACvB,MAAR,CACf,UAAC4B,MAAD;AAAA,iBAAYA,MAAM,CAAC9B,IAAP,KAAgB,YAA5B;AAAA,SADe,CAAjB;AAGA,YAAIqE,MAAM,GAAGD,UAAU,CAAClE,MAAX,CACX,UAAC4B,MAAD;AAAA,iBAAYA,MAAM,CAACe,KAAP,KAAiB,OAA7B;AAAA,SADW,CAAb;AAGA,YAAIyB,QAAQ,GAAGF,UAAU,CAAClE,MAAX,CACb,UAAC4B,MAAD;AAAA,iBAAYA,MAAM,CAACe,KAAP,KAAiB,SAA7B;AAAA,SADa,CAAf;AAGA,YAAI0B,SAAS,GAAGF,MAAM,CAACjD,MAAP,GAAgB,CAAhC;AACA,YAAIoD,WAAW,GAAGF,QAAQ,CAAClD,MAAT,GAAkB,CAApC;AACA,YAAIqD,OAAO,GAAGF,SAAS,IAAIC,WAA3B;AACA,YAAIE,KAAK,GAAGR,EAAE,CAACQ,KAAH,IAAY,OAAxB;AAEA,YAAMC,UAAU,GAAG,4BACjBvB,iBAAOwB,IADU,EAEjBL,SAAS,IAAInB,iBAAOyB,WAFH,EAGjB,CAACN,SAAD,IAAcC,WAAd,IAA6BpB,iBAAO0B,aAHnB,CAAnB;AAMA,4BACE;AACE,UAAA,GAAG,EAAEZ,EAAE,CAAC3C,IAAH,IAAW,OADlB;AAEE,UAAA,SAAS,EAAE,4BAAW6B,iBAAO2B,GAAlB,sBACR3B,iBAAO4B,WADC,EACa,MAAKjD,KAAL,CAAWvC,SAAX,IAAwB0E,EAAE,CAAC3C,IADxC,EAFb;AAKE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAK0D,YAAL,CAAkBf,EAAlB,CAAN;AAAA,WALX;AAME,UAAA,IAAI,EAAC,KANP;AAOE,2BAAe,MAAKnC,KAAL,CAAWvC,SAAX,IAAwB0E,EAAE,CAAC3C,IAP5C;AAQE,qCAAkB2C,EAAE,CAAC3C,IAArB,eARF;AASE,UAAA,EAAE,YAAK2C,EAAE,CAAC3C,IAAR;AATJ,wBAWE;AAAK,UAAA,SAAS,EAAE6B,iBAAO8B;AAAvB,WACGR,KADH,EAEGD,OAAO,iBACN;AAAM,UAAA,SAAS,EAAEE;AAAjB,WACGJ,SAAS,iBAAI,gCAAC,4BAAD,OADhB,EAEG,CAACA,SAAD,IAAcC,WAAd,iBAA6B,gCAAC,8BAAD,OAFhC,CAHJ,CAXF,CADF;AAuBD,OA7CA,CADH,CAFJ,eAmDE;AACE,QAAA,SAAS,EAAErB,YADb;AAEE,QAAA,QAAQ,EAAE,CAFZ;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,EAAE,YAAK,MAAKpB,KAAL,CAAWvC,SAAhB,eAJJ;AAKE,qCAAoB,MAAKuC,KAAL,CAAWvC,SAA/B,SALF;AAME,QAAA,GAAG,EAAE,MAAKmD;AANZ,SAQGM,SAAS,IACRA,SAAS,CAACgB,GAAV,CAAc,UAACjC,KAAD,EAAQmD,CAAR,EAAc;AAC1B,YAAIC,UAAU,GAAGvC,KAAjB;AACA,YAAIwC,QAAQ,GAAGF,CAAC,KAAK,CAAN,GAAU,MAAK1F,eAAf,GAAiC,IAAhD;;AACA,YAAI6F,YAAY,GAAG,MAAK1D,eAAL,CAAqBI,KAAK,CAACT,IAA3B,CAAnB;;AACA,YAAIgE,SAAS,GAAG,CAACvD,KAAK,CAACT,IAAP,CAAhB;AACA,YAAIiE,SAAS,GAAGxD,KAAK,CAAChC,IAAtB;AACA,YAAIyF,aAAa,GAAGzD,KAAK,CAAChC,IAAN,CAAWqC,QAAX,IAAuBA,QAA3C;AACA,YAAIqD,UAAU,GACZ3C,KAAK,IAAIA,KAAK,CAACf,KAAK,CAACT,IAAP,CAAd,GAA6BwB,KAAK,CAACf,KAAK,CAACT,IAAP,CAAlC,GAAiDoE,SADnD;AAGA,YAAIC,iBAAiB,GAAG;AACtBC,UAAAA,GAAG,EAAE7D,KAAK,CAACT,IADW;AAEtBuE,UAAAA,SAAS,EAAE,4BAAWC,yBAAcC,IAAzB,EAA+B5C,iBAAO6C,aAAtC;AAFW,SAAxB;;AAKA,YAAIC,UAAU,mCACTlD,UADS;AAEZmD,UAAAA,GAAG,EAAEd,QAFO;AAGZrF,UAAAA,IAAI,EAAEwF,SAHM;AAIZ/D,UAAAA,OAAO,EAAE6D,YAJG;AAKZzC,UAAAA,KAAK,EAAEuC,UALK;AAMZrE,UAAAA,IAAI,EAAEwE,SANM;AAOZzC,UAAAA,SAAS,EAAEA,SAPC;AAQZT,UAAAA,QAAQ,EAAEoD,aARE;AASZ1C,UAAAA,KAAK,EAAE2C,UATK;AAUZxD,UAAAA,OAAO,EAAE,iBAACnB,IAAD;AAAA,mBAAU,MAAKqF,mBAAL,CAAyBpE,KAAzB,EAAgCjB,IAAhC,CAAV;AAAA,WAVG;AAWZqB,UAAAA,QAAQ,EAAE,kBAACiE,UAAD;AAAA,mBACR,MAAKC,oBAAL,CAA0BtE,KAA1B,EAAiCqE,UAAjC,CADQ;AAAA,WAXE;AAaZpE,UAAAA,MAAM,EAAE;AAAA,mBAAM,MAAKsE,kBAAL,CAAwBvE,KAAxB,CAAN;AAAA;AAbI,UAAd,CAf0B,CA+B1B;AACA;;;AACA,YAAI,OAAO0D,UAAP,KAAsB,WAA1B,EAAuC;AACrC,cAAMc,YAAY,GAAGhB,SAAS,CAACjE,IAA/B;AACA,cAAMkF,UAAU,GAAG,4BAAgBf,UAAhB,CAAnB;AACA,cAAMgB,YAAY,GAAGD,UAAU,KAAKjB,SAAS,CAACmB,QAA9C;;AAEA,cAAIH,YAAY,KAAKC,UAAjB,IAA+B,CAACC,YAApC,EAAkD;AAChD,gCACE,uCAASd,iBAAT,eACE,gCAAC,6BAAD;AACE,cAAA,KAAK,EAAEF,UADT;AAEE,cAAA,QAAQ,EAAEQ,UAAU,CAAC9D,QAFvB;AAGE,cAAA,UAAU,EAAE,CAACoD,SAAS,CAACjE,IAAX,CAHd;AAIE,cAAA,UAAU,EAAEkF,UAJd;AAKE,cAAA,GAAG,EAAE,MAAKG;AALZ,cADF,CADF;AAWD;AACF;;AAED,4BACE,uCAAShB,iBAAT,eACE,gCAAC,6BAAD,EAAsBM,UAAtB,CADF,CADF;AAKD,OA1DD,CATJ,CAnDF,CADF;AA2HD,K;;;;;;;wCArKmB;AAClB,UAAI,KAAKnE,KAAL,CAAWvC,SAAX,KAAyB,EAAzB,IAA+B,KAAKO,KAAL,CAAWC,IAAX,CAAgB0D,SAAhB,CAA0BtC,MAA1B,GAAmC,CAAtE,EAAyE;AACvE,aAAKsB,QAAL,CAAc;AACZlD,UAAAA,SAAS,EAAE,KAAKO,KAAL,CAAWC,IAAX,CAAgB0D,SAAhB,CAA0B,CAA1B,EAA6BnC;AAD5B,SAAd;AAGD;AACF;;;;EAtJgBjC,kBAAMuH,S;;gBAAnBxH,I,eACe;AACjBW,EAAAA,IAAI,EAAE8G,sBAAUC,KAAV,CAAgB;AACpBrD,IAAAA,SAAS,EAAEoD,sBAAUE,KAAV,CAAgBC,UADP;AAEpBhH,IAAAA,MAAM,EAAE6G,sBAAUE,KAAV,CAAgBC;AAFJ,GAAhB,EAGHA,UAJc;AAKjBpE,EAAAA,KAAK,EAAEiE,sBAAUI,MALA;AAMjBnE,EAAAA,KAAK,EAAE+D,sBAAUC,KAAV,CAAgB;AACrBtE,IAAAA,KAAK,EAAEqE,sBAAUK;AADI,GAAhB,CANU;AASjBrE,EAAAA,SAAS,EAAEgE,sBAAUE,KATJ;AAUjB9E,EAAAA,OAAO,EAAE4E,sBAAUM,IAVF;AAWjBnF,EAAAA,MAAM,EAAE6E,sBAAUM,IAXD;AAYjBhF,EAAAA,QAAQ,EAAE0E,sBAAUM;AAZH,C;;eAuTN,+BAAa/H,IAAb,C","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  withDocument,\n  FormBuilderInput,\n  patches,\n} from 'part:@sanity/form-builder';\nimport { resolveTypeName } from './utils';\nimport InvalidValue from '@sanity/form-builder/lib/inputs/InvalidValueInput';\nimport * as PathUtils from '@sanity/util/paths.js';\nimport ErrorOutlineIcon from 'part:@sanity/base/error-outline-icon';\nimport WarningOutlineIcon from 'part:@sanity/base/warning-outline-icon';\nimport defaultStyles from 'part:@sanity/components/formfields/default-style';\nimport classNames from 'classnames';\nimport styles from './tabs.css';\n\nconst { setIfMissing } = patches;\n\nclass Tabs extends React.Component {\n  static propTypes = {\n    type: PropTypes.shape({\n      fieldsets: PropTypes.array.isRequired,\n      fields: PropTypes.array.isRequired,\n    }).isRequired,\n    level: PropTypes.number,\n    value: PropTypes.shape({\n      _type: PropTypes.string,\n    }),\n    focusPath: PropTypes.array,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n  };\n\n  firstFieldInput = React.createRef();\n  activeTabPanel = React.createRef();\n\n  state = {\n    activeTab: '',\n  };\n\n  focus = () => {\n    if (this.firstFieldInput.current) {\n      this.firstFieldInput.current.focus();\n    } else {\n    }\n\n    console.debug(`[Tabs] Focus`);\n  };\n\n  getTabFields = (tabName) => {\n    return this.props.type.fields.filter(\n      (f) => f.fieldset == tabName && f.type.hidden !== true\n    );\n  };\n\n  flattenFields = (arr) => {\n    var result = [];\n    arr.forEach((a) => {\n      result.push(a);\n      if (a.type && Array.isArray(a.type.fields)) {\n        result = result.concat(this.flattenFields(a.type.fields));\n      }\n    });\n    return result;\n  };\n\n  trimChildPath = (path, childPath) => {\n    return PathUtils.startsWith(path, childPath)\n      ? PathUtils.trimLeft(path, childPath)\n      : [];\n  };\n\n  getFieldSet = (path) => {\n    if (path && path.length > 0) {\n      var f = this.props.type.fields.find((f) => {\n        return path.findIndex(f.name) > -1;\n      });\n\n      return f.fieldset;\n    }\n  };\n\n  getTabMarkers = (tabName) => {\n    var fields = this.flattenFields(this.getTabFields(tabName));\n    var markers = fields.reduce((result, f) => {\n      var fm = this.getFieldMarkers(f.name);\n      if (fm && fm.length > 0) {\n        result = result.concat(fm);\n      }\n\n      return result;\n    }, []);\n\n    return markers;\n  };\n\n  getFieldMarkers = (fieldName) => {\n    return this.props.markers.filter((marker) =>\n      PathUtils.startsWith([fieldName], marker.path)\n    );\n  };\n\n  getActiveTabFields = () => {\n    if (this.state.activeTab !== '') {\n      return this.getTabFields(this.state.activeTab);\n    }\n\n    return null;\n  };\n\n  onFieldBlurHandler = (field) => {\n    const { onBlur, type } = this.props;\n\n    console.debug(`[Tabs] FieldBlurred:`, field);\n\n    if (onBlur) {\n      onBlur();\n    }\n  };\n\n  onFieldFocusHandler = (field, path) => {\n    const { onFocus, type } = this.props;\n\n    console.debug(`[Tabs] FieldFocused:`, field, path);\n\n    if (onFocus) {\n      onFocus(path);\n    }\n  };\n\n  onFieldChangeHandler = (field, fieldPatchEvent) => {\n    const { onChange, type } = this.props;\n\n    if (!field.type.readOnly) {\n      var e = fieldPatchEvent\n        .prefixAll(field.name)\n        .prepend(setIfMissing({ _type: type.name }));\n\n      console.debug(`[Tabs] FieldChanged:`, field, e);\n\n      if (onChange) {\n        onChange(e);\n      }\n    }\n  };\n\n  onHandleInvalidValue = (field, fieldPatchEvent) => {\n    const { onChange, type } = this.props;\n  };\n\n  onTabClicked = (fieldset) => {\n    this.setState({\n      activeTab: fieldset.name,\n    });\n    this.activeTabPanel.current.focus();\n  };\n\n  setInput = (input) => {\n    this.firstFieldInput = input;\n  };\n\n  componentDidMount() {\n    if (this.state.activeTab === '' && this.props.type.fieldsets.length > 0) {\n      this.setState({\n        activeTab: this.props.type.fieldsets[0].name,\n      });\n    }\n  }\n\n  render = () => {\n    console.debug(`[Tabs] Props:`, this.props);\n\n    const {\n      level,\n      readOnly,\n      focusPath,\n      value,\n      type,\n      ...otherProps\n    } = this.props;\n    const tabFields = this.getActiveTabFields();\n\n    let contentStyle = styles.content_document;\n\n    if (type.options.layout === 'object') {\n      contentStyle = styles.content_object;\n    }\n\n    var fieldSets = [];\n    if (\n      type.fieldsets &&\n      type.fieldsets.length > 0 &&\n      type.fieldsets[0].single !== true\n    ) {\n      fieldSets = type.fieldsets.sort((a, b) => {\n        if (a.options && b.options) {\n          return a.options.sortOrder - b.options.sortOrder;\n        }\n\n        return 0;\n      });\n    }\n\n    return (\n      <div className={styles.tabs}>\n        {fieldSets.length > 1 && (\n          <div className={styles.tab_headers}>\n            {fieldSets.map((fs) => {\n              var markers = this.getTabMarkers(fs.name);\n              var validation = markers.filter(\n                (marker) => marker.type === 'validation'\n              );\n              var errors = validation.filter(\n                (marker) => marker.level === 'error'\n              );\n              var warnings = validation.filter(\n                (marker) => marker.level === 'warning'\n              );\n              var hasErrors = errors.length > 0;\n              var hasWarnings = warnings.length > 0;\n              var hasIcon = hasErrors || hasWarnings;\n              var title = fs.title || 'Other';\n\n              const iconStyles = classNames(\n                styles.icon,\n                hasErrors && styles.icon__error,\n                !hasErrors && hasWarnings && styles.icon__warning\n              );\n\n              return (\n                <button\n                  key={fs.name || 'other'}\n                  className={classNames(styles.tab, {\n                    [styles.tab__active]: this.state.activeTab == fs.name,\n                  })}\n                  onClick={() => this.onTabClicked(fs)}\n                  role=\"tab\"\n                  aria-selected={this.state.activeTab == fs.name}\n                  aria-controls={`${fs.name}-tab-panel`}\n                  id={`${fs.name}-tab`}\n                >\n                  <div className={styles.tab_inner}>\n                    {title}\n                    {hasIcon && (\n                      <span className={iconStyles}>\n                        {hasErrors && <ErrorOutlineIcon />}\n                        {!hasErrors && hasWarnings && <WarningOutlineIcon />}\n                      </span>\n                    )}\n                  </div>\n                </button>\n              );\n            })}\n          </div>\n        )}\n        <div\n          className={contentStyle}\n          tabIndex={0}\n          role=\"tabpanel\"\n          id={`${this.state.activeTab}-tab-panel`}\n          aria-labelledby={`${this.state.activeTab}-tab`}\n          ref={this.activeTabPanel}\n        >\n          {tabFields &&\n            tabFields.map((field, i) => {\n              var fieldLevel = level;\n              var fieldRef = i === 0 ? this.firstFieldInput : null;\n              var fieldMarkers = this.getFieldMarkers(field.name);\n              var fieldPath = [field.name];\n              var fieldType = field.type;\n              var fieldReadOnly = field.type.readOnly || readOnly;\n              var fieldValue =\n                value && value[field.name] ? value[field.name] : undefined;\n\n              var fieldWrapperProps = {\n                key: field.name,\n                className: classNames(defaultStyles.root, styles.field_wrapper),\n              };\n\n              var fieldProps = {\n                ...otherProps,\n                ref: fieldRef,\n                type: fieldType,\n                markers: fieldMarkers,\n                level: fieldLevel,\n                path: fieldPath,\n                focusPath: focusPath,\n                readOnly: fieldReadOnly,\n                value: fieldValue,\n                onFocus: (path) => this.onFieldFocusHandler(field, path),\n                onChange: (patchEvent) =>\n                  this.onFieldChangeHandler(field, patchEvent),\n                onBlur: () => this.onFieldBlurHandler(field),\n              };\n\n              // Handle invalid values.\n              // Lifted from https://github.com/sanity-io/sanity/blob/next/packages/@sanity/form-builder/src/inputs/ObjectInput/Field.tsx\n              if (typeof fieldValue !== 'undefined') {\n                const expectedType = fieldType.name;\n                const actualType = resolveTypeName(fieldValue);\n                const isCompatible = actualType === fieldType.jsonType;\n\n                if (expectedType !== actualType && !isCompatible) {\n                  return (\n                    <div {...fieldWrapperProps}>\n                      <InvalidValue\n                        value={fieldValue}\n                        onChange={fieldProps.onChange}\n                        validTypes={[fieldType.name]}\n                        actualType={actualType}\n                        ref={this.setInput}\n                      />\n                    </div>\n                  );\n                }\n              }\n\n              return (\n                <div {...fieldWrapperProps}>\n                  <FormBuilderInput {...fieldProps} />\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default withDocument(Tabs);\n"],"file":"index.js"}