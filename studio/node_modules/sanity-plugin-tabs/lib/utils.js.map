{"version":3,"sources":["../src/utils.js"],"names":["toString","Object","prototype","resolveJSType","val","call","length","callee","ex","TypeError","undefined","nodeType","resolveTypeName","value","jsType","_type"],"mappings":";;;;;;;;;AAAA,IAAMA,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBF,QAAlC,C,CACA;;AAEA,SAASG,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,UAAQJ,QAAQ,CAACK,IAAT,CAAcD,GAAd,CAAR;AACE,SAAK,mBAAL;AACE,aAAO,UAAP;;AACF,SAAK,eAAL;AACE,aAAO,MAAP;;AACF,SAAK,iBAAL;AACE,aAAO,QAAP;;AACF,SAAK,oBAAL;AACE,aAAO,WAAP;;AACF,SAAK,gBAAL;AACE,aAAO,OAAP;;AACF,SAAK,iBAAL;AACE,aAAO,QAAP;;AACF;AAbF;;AAgBA,MAAI,QAAOA,GAAP,KAAc,QAAd,IAA0BA,GAA1B,IAAiC,OAAOA,GAAG,CAACE,MAAX,IAAqB,QAA1D,EAAoE;AAClE,QAAI;AACF,UAAI,OAAOF,GAAG,CAACG,MAAX,IAAqB,UAAzB,EAAqC;AACnC;AACA,eAAO,WAAP;AACD;AACF,KALD,CAKE,OAAOC,EAAP,EAAW;AACX,UAAIA,EAAE,YAAYC,SAAlB,EAA6B;AAC3B;AACA,eAAO,WAAP;AACD;AACF;AACF;;AAED,MAAIL,GAAG,KAAK,IAAZ,EAAkB;AAChB,WAAO,MAAP;AACD;;AAED,MAAIA,GAAG,KAAKM,SAAZ,EAAuB;AACrB,WAAO,WAAP;AACD;;AAED,MAAIN,GAAG,IAAIA,GAAG,CAACO,QAAJ,KAAiB,CAA5B,EAA+B;AAC7B,WAAO,SAAP;AACD;;AAED,MAAIP,GAAG,KAAKH,MAAM,CAACG,GAAD,CAAlB,EAAyB;AACvB,WAAO,QAAP;AACD;;AAED,iBAAcA,GAAd;AACD,C,CAED;;;AACO,SAASQ,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,MAAMC,MAAM,GAAGX,aAAa,CAACU,KAAD,CAA5B;AACA,SAAQC,MAAM,KAAK,QAAX,IAAuB,WAAWD,KAAlC,IAA2CA,KAAK,CAACE,KAAlD,IAA4DD,MAAnE;AACD","sourcesContent":["const toString = Object.prototype.toString;\n// Copied from https://github.com/ForbesLindesay/type-of, but inlined to have fine grained control\n\nfunction resolveJSType(val) {\n  switch (toString.call(val)) {\n    case '[object Function]':\n      return 'function';\n    case '[object Date]':\n      return 'date';\n    case '[object RegExp]':\n      return 'regexp';\n    case '[object Arguments]':\n      return 'arguments';\n    case '[object Array]':\n      return 'array';\n    case '[object String]':\n      return 'string';\n    default:\n  }\n\n  if (typeof val == 'object' && val && typeof val.length == 'number') {\n    try {\n      if (typeof val.callee == 'function') {\n        // eslint-disable-line max-depth\n        return 'arguments';\n      }\n    } catch (ex) {\n      if (ex instanceof TypeError) {\n        // eslint-disable-line max-depth\n        return 'arguments';\n      }\n    }\n  }\n\n  if (val === null) {\n    return 'null';\n  }\n\n  if (val === undefined) {\n    return 'undefined';\n  }\n\n  if (val && val.nodeType === 1) {\n    return 'element';\n  }\n\n  if (val === Object(val)) {\n    return 'object';\n  }\n\n  return typeof val;\n}\n\n// Copied from https://github.com/sanity-io/sanity/blob/next/packages/@sanity/form-builder/src/utils/resolveTypeName.ts\nexport function resolveTypeName(value) {\n  const jsType = resolveJSType(value);\n  return (jsType === 'object' && '_type' in value && value._type) || jsType;\n}\n"],"file":"utils.js"}